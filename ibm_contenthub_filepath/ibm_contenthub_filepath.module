<?php

use Acquia\ContentHubClient\Entity as ContentHubEntity;
use Acquia\ContentHubClient\Attribute;

const IBM_CONTENTHUB_ATTRIBUTE_FILEURI = '_file_uri';

/**
 * Allows modules to modify the CDF before it is sent to the Content Hub.
 *
 * Common Data Format (CDF): https://docs.acquia.com/content-hub/cdf.
 *
 * This is very useful to modify the CDF (usually its attributes) before
 * it is sent to the Content Hub during the normalization process.
 * Note that the changes will be reflected in the entity published in Content
 * Hub, but the local Drupal entity will not be affected.
 *
 * @param \Acquia\ContentHubClient\Entity $contenthub_entity
 *   The Content Hub CDF.
 */
function ibm_contenthub_filepath_acquia_contenthub_cdf_from_drupal_alter(ContentHubEntity $contenthub_entity) {

  // Adding changes to the 'file' entity types.
  if ($contenthub_entity->getType() == 'file') {
    $uuid = $contenthub_entity->getUuid();

    // Always check that the changes have already been applied, because the
    // normalizer could be called more than once during the export process.
    if ($contenthub_entity->getAttribute(IBM_CONTENTHUB_ATTRIBUTE_FILEURI) === FALSE) {
      $file =  \Drupal::service("entity.repository")->loadEntityByUuid('file', $uuid);
      $uri = $file->getFileUri();
      $attribute = new Attribute(Attribute::TYPE_STRING);
      $attribute->setValue($uri);

      // Setting up new attribute.
      $contenthub_entity->setAttribute(IBM_CONTENTHUB_ATTRIBUTE_FILEURI, $attribute);
    }
  }
}

/**
 * Allows modules to modify the CDF before converting to Drupal Entity.
 *
 * Common Data Format (CDF): https://docs.acquia.com/content-hub/cdf.
 *
 * This is useful to modify the CDF that has been fetched from the Content
 * Hub before it has been converted to Drupal Entity during the denormalization
 * process.
 * Note that we these changes affect the local entity imported from Content Hub
 * but do not affect the entity in Content Hub itself.
 *
 * @param \Acquia\ContentHubClient\Entity $contenthub_entity
 *   The Content Hub CDF.
 */
function ibm_contenthub_filepath_acquia_contenthub_cdf_from_hub_alter(ContentHubEntity $contenthub_entity) {
  if ($contenthub_entity->getType() == 'file') {
    $uri = $contenthub_entity->getAttribute(IBM_CONTENTHUB_ATTRIBUTE_FILEURI)->getValue();
    if (substr($uri, 0, 9) === 'public://') {
      // Create directory.
      $path = pathinfo($uri);
      $dir = $path['dirname'];
      list($scheme, $dirs) = explode('://', $dir);
      $directories = explode('/', $dirs);
      $filepath = $scheme . ':/';
      foreach ($directories as $directory) {
        $filepath = $filepath . '/' . $directory;
        if (!is_dir($filepath) || !is_writable($filepath)) {
          if (!file_prepare_directory($filepath, FILE_CREATE_DIRECTORY)) {
            // Log that directory could not be created.
            \Drupal::logger('ibm_contenthub_filepath')
              ->error('Cannot create files subdirectory "!dir". Please check filesystem permissions.', [
                '!dir' => $filepath,
              ]);
          }
        }
      }
    }

  }
}